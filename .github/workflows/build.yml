on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-macos-aarch64:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v5
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        default: true
    - run: |
        mkdir .cargo
        mv .github/actions_config.toml .cargo/config.toml
    - run: brew install openssl@3
    - uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-bundle
        locked: false
    - uses: Swatinem/rust-cache@v2

    - run: cargo bundle --release
    - uses: actions/upload-artifact@v4
      with:
        name: macos-aarch64
        path: target/release/bundle/osx/stencil2.app

  build-macos-x86_64:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          default: true
      - run: |
          mkdir .cargo
          mv .github/actions_config.toml .cargo/config.toml
      - run: brew install openssl@3
      - uses: Swatinem/rust-cache@v2

      - run: cargo build --release
      - uses: actions/upload-artifact@v4
        with:
          name: macos-x86_64
          path: target/release/stencil2

  build-macos:
    runs-on: macos-latest
    needs: [build-macos-aarch64, build-macos-x86_64]

    steps:
      - uses: actions/download-artifact@v5
        with:
          name: macos-aarch64
          path: app/stencil2.app
      - uses: actions/download-artifact@v5
        with:
          name: macos-x86_64

      - run: |
          lipo app/stencil2.app/Contents/MacOS/stencil2 stencil2 -create -output stencil2-new
          mv stencil2-new app/stencil2.app/Contents/MacOS/stencil2
      - run: |
          ln -s "/Applications" "app/"
          hdiutil create stencil2.dmg -fs HFS+ -volname stencil2 -srcfolder "app/" -ov

      - uses: actions/upload-artifact@v4
        with:
          name: macos
          path: stencil2.dmg

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
    - uses: rui314/setup-mold@v1
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        default: true
    - run: |
        mkdir .cargo
        mv .github/actions_config.toml .cargo/config.toml
    - uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-bundle
        locked: false
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
        version: 1.0
    - uses: Swatinem/rust-cache@v2

    - run: cargo bundle --release --format deb
    - uses: actions/upload-artifact@v4
      with:
        name: linux
        path: target/release/bundle/deb/stencil2*.deb

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v5
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        default: true
    - run: |
        mkdir .cargo
        mv .github/actions_config.toml .cargo/config.toml
    - uses: baptiste0928/cargo-install@v3
      with:
        crate: cargo-wix
        locked: false
    - uses: Swatinem/rust-cache@v2

    - run: cargo build --release
    - run: cargo wix -I "./build/windows/main.wxs" -v
    - uses: actions/upload-artifact@v4
      with:
        name: windows
        path: target/wix/stencil2-*-x86_64.msi

  version-changelog:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}

    steps:
    - uses: actions/checkout@v5
    - run: cargo update
    - id: version
      run: echo "version=$(cargo pkgid | cut -d '#' -f 2)" >> "$GITHUB_OUTPUT"
    - id: changelog
      run: |
        {
        echo 'changelog<<__EOF__'
        python -c "
        import os
        print('\n'.join(open('changelog.md').read().split('# v' + os.environ['VERSION'])[1].split('\n')[1:]).split('\n#')[0])
        "
        echo __EOF__
        } >> "$GITHUB_OUTPUT"
      env:
        VERSION: ${{ steps.version.outputs.version }}

  github-release:
    runs-on: ubuntu-latest
    needs:
      - build-linux
      - build-macos
      - build-windows
      - version-changelog
    permissions:
      id-token: write
      attestations: write
      contents: write

    steps:
    - uses: actions/download-artifact@v5
      with:
        name: macos
        path: dist
    - uses: actions/download-artifact@v5
      with:
        name: linux
        path: dist
    - uses: actions/download-artifact@v5
      with:
        name: windows
        path: dist
    - uses: actions/attest-build-provenance@v3
      with:
        subject-path: dist/*
    - uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ needs.version-changelog.outputs.version }}
        body: ${{ needs.version-changelog.outputs.changelog }}
        files: dist/*

  update-hash:
    runs-on: ubuntu-latest
    needs:
      - github-release
      - version-changelog
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v5
      - env:
          VERSION: ${{ needs.version-changelog.outputs.version }}
        run: |
          export MAC_SHA=$(curl "https://github.com/MRT-Map/stencil2/releases/download/v$VERSION/stencil2.dmg" -L | shasum -a 256 | cut -d ' ' -f1)
          cat build/macos/brew.rb | sed "s/sha256 \".*\"/sha256 \"$MAC_SHA\"/" > build/macos/brew2.rb
          cat build/macos/brew2.rb | sed "s/version \".*\"/version \"$VERSION\"/" > build/macos/brew.rb
          rm build/macos/brew2.rb

          export LINUX_SHA=$(curl "https://github.com/MRT-Map/stencil2/releases/download/v$VERSION/stencil2_${VERSION}_amd64.deb" -L | shasum -a 256 | cut -d ' ' -f1)
          cat build/linux/PKGBUILD | sed "s/sha256sums=.*/sha256sums=('$LINUX_SHA')/" > build/linux/PKGBUILD2
          cat build/linux/PKGBUILD2 | sed "s/pkgver=.*/pkgver=$VERSION/" > build/linux/PKGBUILD
          rm build/linux/PKGBUILD2
          
          cat build/windows/scoop.json | sed "s/\"version\": .*/\"version\": \"$VERSION\",/" > build/windows/scoop2.json
          mv build/windows/scoop2.json build/windows/scoop.json
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: update sha256 for v${{ needs.version-changelog.outputs.version }}

      - uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: mrt-map/homebrew-mrt-map
          event-type: update_stencil2
      - uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: mrt-map/arch-mrt-map
          event-type: update_stencil2
